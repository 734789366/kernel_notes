  1. 栈区——由编译器自动分配和释放，一般存放函数的参数值、局部变量的值等（速度较快）。栈区处于相对较高的地址，栈地址是向下增长的。栈是分配局部变量空间。栈是一块连续的内存区域。
  2. 堆区——由程序员分配及释放，若程序员不释放，程序结束后可能由OS回收（速度比较慢，而且容易产生内存碎片）。堆区是向上增长的用于分配程序员申请的内存空间。堆是用链表管理的，是不连续的区域。
  3. 另外还有静态区，是分配静态变量、全局变量空间的；只读区是分配常量和程序代码空间的；以及其他一些分区。
  4. 堆和栈的第一个区别就是申请方式不同：栈（英文名称是stack）是系统自动分配空间的，例如我们定义一个 char a，系统会自动在栈上为其开辟空间。而堆（英文名称是heap）则是程序员根据需要自己申请的空间，例如malloc（10），开辟十个字节的空间。
  由于栈上的空间是自动分配自动回收的，所以栈上的数据的生存周期只是在函数的运行过程中，运行后就释放掉，不可以再访问。而堆上的数据只要程序员不释放空间，就一直可以访问到，不过缺点是一旦忘记释放会造成内存泄露。
  5. 栈：由系统自动分配，速度较快。但程序员是无法控制的。堆：是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便。
  6. 堆和栈的区别可以引用一位前辈的比喻来看出：  
      a. 使用栈就象我们去饭馆里吃饭，只管点菜（发出申请）、付钱、和吃（使用），吃饱了就走，不必理会切菜、洗菜等准备工作和洗碗、刷锅等扫尾工作，他的好处是快捷，但是自由度小。  
      b. 使用堆就象是自己动手做喜欢吃的菜肴，比较麻烦，但是比较符合自己的口味，而且自由度大。
